---
meta:
  productName: "terraform-aws-executors"
  owners:
    - "sourcegraph/release"
  repository: "github.com/sourcegraph/terraform-aws-executors"
inputs:
  - releaseId: server
requirements:
  - name: "comby"
    cmd: "which comby"
    fixInstructions: "install comby"
  - name: "GitHub CLI"
    cmd: "which gh"
    fixInstructions: "install GitHub cli"
  - name: "prev_tag"
    cmd: "[[ -n $PREV_TAG ]]"
    fixInstructions: "Pass $PREV_TAG as an env var"
internal:
  create:
    steps:
      minor:
        - name: "env_var:prev_tag"
          cmd: |
            # get previous tag we need to replace
            # There's no .git info for us to query in batch-changes
            echo $PREV_TAG | sed 's/v//' > prev_tag
            # convert the tag to the image family format which uses hipens and is only for `major-minor`
            echo "{{tag}}" | grep -o -E "[[:digit:]]+\.[[:digit:]]+" | sed 's/\./-/' > family_tag
        - name: "files(README.md)"
          cmd: comby "$(cat prev_tag)" '{{tag}}' -i -f .md
        - name: "files(tf)"
          cmd: comby "\"$(cat prev_tag)\"" '"{{tag}}"' -i -f .tf -exclude providers.tf
        - name: "family(name):docker-mirror"
          cmd: comby '["sourcegraph-executors-docker-mirror-:[~\d+-\d+]-*"]' "[\"sourcegraph-executors-docker-mirror-$(cat family_tag)-*\"]" -i -f .tf
        - name: "family(name):sourcegraph"
          cmd: comby '["sourcegraph-executors-:[~\d+-\d+]-*"]' "[\"sourcegraph-executors-$(cat family_tag)-*\"]" -i -f .tf
        - name: "cleanup"
          cmd: |
            # remove files we used in previous steps
            rm -vf family_tag
            rm -vf prev_tag
      major:
        - name: "env_var:prev_tag"
          cmd: |
            # get previous tag we need to replace
            echo $PREV_TAG | sed 's/v//' > prev_tag
            # convert the tag to the image family format which uses hipens and is only for `major-minor`
            echo "{{tag}}" | grep -o -E "[[:digit:]]+\.[[:digit:]]+" | sed 's/\./-/' > family_tag
        - name: "files(README.md)"
          cmd: comby -in-place "$(cat prev_tag)" '{{tag}}' README.md
        - name: "files(tf)"
          cmd: comby "\"$(cat prev_tag)\"" '"{{tag}}"' -i -f .tf -exclude providers.tf
        - name: "family(name):docker-mirror"
          cmd: comby '["sourcegraph-executors-docker-mirror-:[~\d+-\d+]-*"]' "[\"sourcegraph-executors-docker-mirror-$(cat family_tag)-*\"]" -i -f .tf
        - name: "family(name):sourcegraph"
          cmd: comby '["sourcegraph-executors-:[~\d+-\d+]-*"]' "[\"sourcegraph-executors-$(cat family_tag)-*\"]" -i -f .tf
        - name: "cleanup"
          cmd: |
            # remove files we used in previous steps
            rm -vf family_tag
            rm -vf prev_tag
  finalize:
    steps:
      - name: "notifications"
        cmd: |
          set -eu

          branch="internal/release-{{version}}"

          # Post a comment on the PR.
          cat << EOF | gh pr comment "$branch" --body-file -
          - :green_circle: Internal release is ready for promotion!
          - :warning: Do not close/merge the pull request or delete the associated branch if you intend to promote it.
          EOF
          # Post an annotation.
          cat << EOF | buildkite-agent annotate --style info
          Internal release is ready for promotion under the branch [\`$branch\`](https://github.com/sourcegraph/terraform-aws-executors/tree/$branch).
          EOF

      # - name: 'Register on release registry'
      #   cmd: |
      #     echo "Registering internal terraform-aws-executors {{version}} release on release registry"
      #     body=$(wget --content-on-error -O- --header="Content-Type: application/json" --header="Authorization: ${RELEASE_REGISTRY_TOKEN}" --post-data '{
      #         "name": "terraform-aws-executors",
      #         "version": "{{version}}",
      #         "git_sha": "'${COMMIT_SHA}'"
      #       }' "https://releaseregistry.sourcegraph.com/v1/releases")
      #     exit_code=$?

      #     if [ $exit_code != 0 ]; then
      #       echo "❌ Failed to create release in release registry, got:"
      #       echo "--- raw body ---"
      #       echo $body
      #       echo "--- raw body ---"
      #       exit $exit_code
      #     else
      #       echo "Release created, see:"
      #       echo $body
      #     fi

test:
  steps:
    - name: "changes:README"
      cmd: |
        count=$(grep -c "{{tag}}" --include "README.md" -r . | awk -F ":"  '{sum=sum + $2} END {print sum;}')
        expected=16
        if [[ ${count} -ne ${expected} ]]; then
          echo "expected ${expected} new version tags of \"{{tag}}\" in README.md, got ${count}"
          exit 1
        fi
    - name: "changed:tf"
      cmd: |
        count=$(comby -match-only '"{{tag}}"' '' -f .tf | wc -l)
        expected=6
        if [[ ${count} -ne ${expected} ]]; then
          echo "expected ${expected} .tf files to be updated with \"{{tag}}\" but got ${count}"
          exit 1
        fi
    - name: changes:family(docker-mirror)""
      cmd: |
        set -eu

        echo "{{tag}}" | grep -o -E "[[:digit:]]+\.[[:digit:]]+" | sed 's/\./-/' > family_tag
        trap "rm family_tag" EXIT

        current_branch="${BUILDKITE_BRANCH:-$(git rev-parse --abbrev-ref HEAD)}"

        family_regex="\"sourcegraph-executors-docker-mirror-$(cat family_tag)-*\""
        if [[ $current_branch =~ ^(promote|release)/.* ]]; then
          family_regex="\"sourcegraph-executors-docker-mirror-$(cat family_tag)-*\""
        fi

        count=$(comby -match-only "${family_regex}" '' -f .tf | wc -l)
        expected=1
        if [[ ${count} -ne ${expected} ]]; then
          echo "expected ${expected} .tf files to be updated with \"${family_regex}\" but got ${count}"
          exit 1
        fi
    - name: "changes:family(sourcegraph)"
      cmd: |
        set -eu

        echo "{{tag}}" | grep -o -E "[[:digit:]]+\.[[:digit:]]+" | sed 's/\./-/' > family_tag
        trap "rm family_tag" EXIT

        current_branch="${BUILDKITE_BRANCH:-$(git rev-parse --abbrev-ref HEAD)}"

        family_regex="\"sourcegraph-executors-$(cat family_tag)-*\""
        if [[ $current_branch =~ ^(promote|release)/.* ]]; then
          family_regex="\"sourcegraph-executors-$(cat family_tag)-*\""
        fi

        count=$(comby -match-only "${family_regex}" '' -f .tf | wc -l)
        expected=1
        if [[ ${count} -ne ${expected} ]]; then
          echo "expected ${expected} file to have the correct image family set but got but got ${count} files"
          exit 1
        fi

promoteToPublic:
  create:
    steps:
      # Since we're promoting to public we need to remove the "internal" from the family
      - name: "family(name):docker-mirror"
        cmd: comby '["sourcegraph-executors-docker-mirror-:[family_tag_hole~\d+-\d+]-*"]' "[\"sourcegraph-executors-docker-mirror-:[family_tag_hole]-*\"]" -i -f .tf
      - name: "family(name):sourcegraph"
        cmd: comby '["sourcegraph-executors-:[family_tag_hole~\d+-\d+]-*"]' "[\"sourcegraph-executors-:[family_tag_hole]-*\"]" -i -f .tf
  finalize:
    steps:
      # - name: 'Promote on release registry'
      #   cmd: |
      #     echo "Promoting terraform-aws-executors {{version}} release on release registry"
      #     body=$(wget --content-on-error -O- --header="Content-Type: application/json" --header="Authorization: ${RELEASE_REGISTRY_TOKEN}" --post-data '' "https://releaseregistry.sourcegraph.com/v1/releases/terraform-aws-executors/{{version}}/promote")
      #     exit_code=$?

      #     if [ $exit_code != 0 ]; then
      #       echo "❌ Failed to promote release on release registry, got:"
      #       echo "--- raw body ---"
      #       echo $body
      #       echo "--- raw body ---"
      #       exit $exit_code
      #     else
      #       echo "Release promoted, see:"
      #       echo $body
      #     fi
      - name: git:tag
        cmd: |
          set -eu

          # Branches
          internal_branch="internal/release-{{version}}"
          promote_branch="promote/release-{{version}}"
          release_branch="release-{{version}}"

          # Create the final branch holding the tagged commit
          git checkout "${promote_branch}"
          git switch -c "${release_branch}"
          git tag {{version}}
          git push origin ${release_branch} --tags

          # Web URL to the tag
          tag_url="https://github.com/sourcegraph/terraform-aws-executors/tree/{{version}}"

          # Annotate PRs
          cat << EOF | gh pr comment "$internal_branch" --body-file -
          - :green_circle: Release has been promoted, see tag: $tag_url.
          - :no_entry: Do not under any circumstance delete the branch holding the tagged commit (i.e. \`$release_branch\`).
          - :arrow_right: You can safely close the PR and delete its a associated branch.
          EOF

          cat << EOF | gh pr comment "$promote_branch" --body-file -
          - :green_circle: Release has been promoted, see tag: $tag_url.
          - :no_entry: Do not under any circumstance delete the branch holding the tagged commit (i.e. \`$release_branch\`).
          - :arrow_right: You can safely close that PR and delete its a associated branch.
          EOF

          # Annotate build
          cat << EOF | buildkite-agent annotate --style info
          Promoted release is **publicly available** through a git tag at [\`{{version}}\`](https://github.com/sourcegraph/terraform-aws-executors/tree/{{version}}).
          EOF
